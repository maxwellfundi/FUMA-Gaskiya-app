{"version":3,"sources":["../../src/pages/localite/ajouter-region/ajouter-region.module.ts","../../src/pages/localite/ajouter-region/ajouter-region.ts"],"names":[],"mappings":"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","file":"50.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AjouterRegionPage } from './ajouter-region';\n\n@NgModule({\n  declarations: [\n    AjouterRegionPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AjouterRegionPage),\n  ],\n  exports: [\n    AjouterRegionPage\n  ]\n})\nexport class AjouterRegionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/localite/ajouter-region/ajouter-region.module.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, IonicPage, ToastController, LoadingController, AlertController, ViewController, MenuController, Events } from 'ionic-angular';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { PouchdbProvider } from '../../../providers/pouchdb-provider';\n/**\n * Generated class for the AjouterRegionPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage() \n@Component({\n  selector: 'page-ajouter-region',\n  templateUrl: 'ajouter-region.html',\n})\nexport class AjouterRegionPage {\n  regionForm: any;\n  region: any;\n  allRegion: any = [];\n  nom_pays: any;\n  id_pays: any;\n  id: any = '';\n  nom: any = '';\n\n  //pays: any;\n  allRegions: any = [];\n  ancien_nom: any = '';\n  ancien_id: any = '';\n\n  liste: boolean = false;\n  ajouter:boolean = true;\n  modifier: boolean = false;\n  pays_defini: boolean = false;\n  allPays: any = [];\n  gestion_region: boolean = false;\n\n \n  constructor(public navCtrl: NavController, public loadingCtl: LoadingController, public alertCtl: AlertController, public menuCtl: MenuController, public viewCtrl: ViewController, public navParams: NavParams,public toastCtl: ToastController, public servicePouchdb: PouchdbProvider, public formBuilder: FormBuilder) {\n  \n\n    if(this.navParams.data.liste){\n      this.liste = true;\n      this.gestion_region = true;\n      this.ajouter = false;\n    }\n\n    if(this.navParams.data.id_pays){\n      this.id_pays = this.navParams.data.id_pays;\n      this.nom_pays = this.navParams.data.nom_pays;\n      this.pays_defini = true;\n    }\n    \n    this.regionForm = this.formBuilder.group({\n      id:['', Validators.required],\n      nom:['', Validators.required],\n      id_pays:[''],\n      nom_pays:[''],\n    });\n  }\n\n  ionViewDidEnter() {\n     this.servicePouchdb.getDocById('region').then((region) => {\n       this.allRegion = region.data;\n       this.region = region;\n       //alert(this.pays._id)\n     });\n\n       this.servicePouchdb.getDocById('pays').then((pays) => {\n          this.allPays = pays.data;\n        });\n\n  }\n\n  //fait la conbinaison de caractere de gauche vers la droite en variant la taille a la recherche d'un code disponible\n  genererID(){\n    \n    let nom = this.nom;\n     nom = nom.replace(' ' || '  ' || '    ' || '     ' || '      ' , '');\n     let taille_nom = nom.length;\n     let an = nom;\n    //taille initiale: deux aractères\n    let taille_code = 2;\n    let code: string = '';\n    this.id = code.toUpperCase()\n    let p = 0;\n    let last_position = 0;\n    let trouve: boolean;\n\n    if(taille_nom >= 2){\n      while(taille_code <= taille_nom){\n        last_position = taille_code - 1;\n        trouve  = false;\n        code = '';\n        for(let i = 0; i < taille_code; i++){\n          code += nom.charAt(i).toString() ;\n        }\n\n        do{\n            code = code.substr(0, code.length - 1);\n            code += nom.charAt(last_position).toString() ;\n            p = 0;\n            for(let pos=0; pos < this.allRegion.length; pos++){\n              let rg = this.allRegion[pos];\n              if(rg.id === code.toUpperCase()){\n                trouve = true;\n                break ;\n              }else{\n                trouve = false;\n              }\n            }\n            \n            last_position++;\n\n          }while(trouve && last_position < taille_nom);\n          //\n          if(last_position === taille_nom && trouve){\n            //non disponible, augmenter la taille du code\n            taille_code++;\n        \n            //au cas ou on teste toutes les combinaisons, sant trouver de combinaison disponible, on ajoute des chiffre\n            if(taille_code > taille_nom){\n              //non disponible, augmenter la taille et utiliser des chiffres\n              taille_code = 3;\n              nom = an + '123456789'.toString();\n              taille_nom = nom.length;\n            }\n          }else{\n              this.id = code.toUpperCase();\n              break;\n            \n          }\n      }\n      \n    }\n    \n  }\n\n   verifierUniqueNon(region){\n    let res = 1;\n    this.allRegion.forEach((p, index) => {\n      if((region.nom.toString().toUpperCase() === p.nom.toString().toUpperCase())){\n        res = 0;\n      }\n    });\n\n    return res;\n  }\n\n\n /* ajouter(){\n    \n    let region = this.regionForm.value;\n  //  if(this.verifierUniqueNon(region) === 0){\n    //  alert('Les noms des régions doivent être uniques!');\n    //}else{\n      let data = [];\n      data = this.region.data;\n      data.push(region);\n      this.region.data = data;\n      this.servicePouchdb.updateLocalite(this.region);\n      let toast = this.toastCtl.create({\n        message: 'Région bien enregistré!',\n        position: 'top',\n        duration: 3000\n      });\n\n      toast.present();\n      this.viewCtrl.dismiss();\n  //  }\n  } */\n\n\n    actionForm(){\n    if(this.ajouter){\n        let region = this.regionForm.value;\n      if(this.verifierUniqueNon(region) === 0){\n        alert('Les noms des regions doivent être uniques!');\n      }else{\n\n        //let region = this.regionForm.value;\n  //  if(this.verifierUniqueNon(region) === 0){\n    //  alert('Les noms des régions doivent être uniques!');\n    //}else{\n        let data = [];\n        data = this.region.data;\n        if(!this.pays_defini){\n          region.id_pays = this.id_pays.id;\n          region.nom_pays = this.id_pays.nom;\n        }\n        data.push(region);\n        this.region.data = data;\n        this.region.type = 'region';\n        this.allRegion = data;\n        this.servicePouchdb.updateLocalite(this.region).then((res) => {\n          this.region._rev = res.rev;\n        })\n        let toast = this.toastCtl.create({\n          message: 'Région bien enregistré!',\n          position: 'top',\n          duration: 1000\n        });\n\n        toast.present();\n        this.ajouter = false;\n\n        if(!this.gestion_region){\n          this.viewCtrl.dismiss();\n        }else{\n          this.liste = true;\n          this.ajouter = false;\n        }\n      }\n    }else if(this.modifier){\n      let loading = this.loadingCtl.create({\n        content: 'Application des changements en cours...'\n      });\n\n      //loading.present();\n      let region = this.regionForm.value;\n      if(!this.pays_defini){\n        region.id_pays = this.id_pays.id;\n        region.nom_pays = this.id_pays.nom;\n      }\n      this.allRegion.forEach((r, i) => {\n        if(r.id === region.id){\n          this.allRegion[i] = region;\n        }\n      });\n\n      this.region.data = this.allRegion;\n      //this.allPays.splice(this.pays.indesOf())\n      //this.servicePouchdb.updateLocalite(this.region);\n      this.servicePouchdb.updateLocalite(this.region).then((res) => {\n          this.region._rev = res.rev;\n      })\n        //recuperer tous les doc pour modifier le nom du pays\n        /*this.servicePouchdb.getPlageDocsRapide('fuma', 'fuma:\\uffff').then((allDocs) => {\n          allDocs.map((doc) => {\n            //pour les essais\n            ******if(doc.doc.data.type === 'essai' && doc.doc.data.village_producteur === this.ancien_nom ){\n              doc.doc.data0village_producteur = pays.nom;\n              this.servicePouchdb.updateDoc(doc.doc);\n            }else *******\n            //pour les memebres\n            if(doc.doc.data.type === 'membre_op' && doc.doc.data.region === this.ancien_id ){\n              doc.doc.data.region_nom = region.nom;\n              this.servicePouchdb.updateDoc(doc.doc);\n            }\n            else \n            //pour les union\n            if(doc.doc.data.type === 'union' && doc.doc.data.region === this.ancien_id ){\n              doc.doc.data.region_nom = region.nom;\n              this.servicePouchdb.updateDoc(doc.doc);\n            }\n            else \n            //pour les op\n            if(doc.doc.data.type === 'op' && doc.doc.data.region === this.ancien_id ){\n              doc.doc.data.region_nom = region.nom;\n              this.servicePouchdb.updateDoc(doc.doc);\n            }\n           ****** else \n            //pour les champs\n            if(doc.doc.data.type === 'champs' && doc.doc.data.village === this.ancien_nom ){\n              doc.doc.data.village = pays.nom;\n              this.servicePouchdb.updateDoc(doc.doc);\n            }*******\n          });\n\n           let toast = this.toastCtl.create({\n              message: 'Région bien modifier!',\n              position: 'top',\n              duration: 1000\n            });\n            toast.present();  \n            loading.dismissAll();\n        });\n      */\n\n      let toast = this.toastCtl.create({\n        message: 'Région bien modifier!',\n        position: 'top',\n        duration: 1000\n      });\n      toast.present();\n\n      this.ajouter = false;\n        this.modifier = false;\n        this.liste = true;\n    }\n  } \n\n  ajouterRegion(){\n    this.id = '';\n    this.nom = '';\n    this.id_pays = '';\n    this.nom_pays;\n    this.liste = false;\n    this.ajouter = true;\n  }\n\n  modifierRegion(region){\n\n    this.id = region.id;\n    this.nom = region.nom;\n    this.id_pays = region.id_pays;\n    this.nom_pays = region.nom_pays;\n    this.ancien_nom = this.nom;\n    this.ancien_id = this.id;\n    this.liste = false;\n    this.modifier = true;\n\n    this.allPays.forEach((pays) => {\n      if(this.id_pays === pays.id){\n        this.id_pays = pays;\n      }\n    })\n  }\n\n  supprimerRegion(region){\n    let e: any = {};\n    let alert = this.alertCtl.create({\n      title: 'Suppression Région',\n      message: 'Etes vous sûr de supprimer cette région ?',\n      buttons:[\n        {\n          text: 'Non',\n          handler: () => console.log('suppression annulée')\n \n        },\n        {\n          text: 'Oui',\n          handler: () => {\n            this.allRegion.forEach((r, i) => {\n              if(r.id === region.id){\n                this.allRegion.splice(i, 1);\n              }\n            });\n\n            this.region.data = this.allRegion;\n            //this.allPays.splice(this.pays.indesOf())\n            //this.servicePouchdb.updateLocalite(this.region);\n            this.servicePouchdb.updateLocalite(this.region).then((res) => {\n              this.region._rev = res.rev;\n            })\n            let toast = this.toastCtl.create({\n              message: 'Région bien suprimé!',\n              position: 'top',\n              duration: 1000\n            });\n            toast.present();           \n          }\n        }\n      ]\n    });\n\n    alert.present();\n  }\n\n  annuler(){\n    if(this.gestion_region){\n      if(this.liste){\n        this.viewCtrl.dismiss();\n      }else if(this.ajouter){\n        this.liste = true;\n        this.ajouter = false;\n      } else{\n        this.liste = true;\n        this.modifier = false;\n      }\n\n    }else{\n      this.viewCtrl.dismiss();\n    }\n     \n  }\n\n  getItems(ev: any) {\n    // Reset items back to all of the items\n    //this.essais = this.allEssais;\n\n    // set val to the value of the searchbar\n    let val = ev.target.value;\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.allRegion = this.region.data.filter((item, index) => {\n        return (item.nom.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      });\n    }\n  } \n\n\n/*  annuler(){\n     this.viewCtrl.dismiss();\n  }\n*/\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/localite/ajouter-region/ajouter-region.ts"],"sourceRoot":""}