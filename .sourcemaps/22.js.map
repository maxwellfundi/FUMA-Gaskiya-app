{"version":3,"sources":["../../src/pages/type-sole/type-sole.module.ts","../../src/pages/type-sole/type-sole.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACL;AAO3C;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAL9B,uEAAQ,CAAC;YACR,YAAY,EAAE,CAAC,gEAAY,CAAC;YAC5B,OAAO,EAAE,CAAC,sEAAe,CAAC,QAAQ,CAAC,gEAAY,CAAC,CAAC;YACjD,OAAO,EAAE,CAAC,gEAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACTW;AAC+B;AACN;AACnE,8EAA8E;AAC9E,2EAA2E;AAClC;AAEzC;;;;;EAKE;AAMF;IAKE,sBAAmB,OAAsB,EAAS,OAAuB,EAAS,SAAoB,EAAS,OAAgB,EAAS,cAA+B;QAApJ,YAAO,GAAP,OAAO,CAAe;QAAS,YAAO,GAAP,OAAO,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,YAAO,GAAP,OAAO,CAAS;QAAS,mBAAc,GAAd,cAAc,CAAiB;QAHvK,cAAS,GAAQ,EAAE,CAAC;QACpB,iBAAY,GAAQ,EAAE,CAAC;IAEmJ,CAAC;IAE3K,sCAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,gBAAgB,EAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,UAAC,SAAS;YACtF,EAAE,EAAC,SAAS,CAAC,EAAC;gBACZ,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAChC,CAAC;QACH,CAAC,EAAE,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IAChC,CAAC;IAEC,8BAAO,GAAP;QACA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,CAAC;IAGD,8BAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC3C,CAAC;IAED,6BAAM,GAAN,UAAO,QAAQ;QACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAC,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;IAClE,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAO;QACd,uCAAuC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAEnC,wCAAwC;QACxC,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;QAE1B,yDAAyD;QACzD,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,IAAI;gBAC1C,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA1CU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;qBAMuK;OAL5J,YAAY,CA4CxB;IAAD,CAAC;AAAA;SA5CY,YAAY,gB","file":"22.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TypeSolePage } from './type-sole';\r\n\r\n@NgModule({\r\n  declarations: [TypeSolePage],\r\n  imports: [IonicPageModule.forChild(TypeSolePage)],\r\n  exports: [TypeSolePage]\r\n})\r\nexport class TypeSolePageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/type-sole/type-sole.module.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams, ViewController, IonicPage } from 'ionic-angular';\nimport { PouchdbProvider } from '../../providers/pouchdb-provider';\n//import { AjouterTypeSolePage } from './ajouter-type-sole/ajouter-type-sole';\n//import { DetailTypeSolePage } from './detail-type-sole/detail-type-sole';\nimport { Storage } from '@ionic/storage';\n\n/*\n  Generated class for the TypeSole page.\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n  Ionic pages and navigation.\n*/\n@IonicPage()\n@Component({\n  selector: 'page-type-sole',\n  templateUrl: 'type-sole.html'\n})\nexport class TypeSolePage {\n\n  typeSoles: any = [];\n  allTypeSoles: any = [];\n\n  constructor(public navCtrl: NavController, public viewCtl: ViewController, public navParams: NavParams, public storage: Storage, public servicePouchdb: PouchdbProvider) {}\n\n  ionViewDidEnter() {\n    this.servicePouchdb.getPlageDocs('fuma:type-sole','fuma:type-sole:\\uffff').then((typeSoles) => {\n        if(typeSoles){\n          this.typeSoles = typeSoles;\n          this.allTypeSoles = typeSoles;\n        }\n      }, err => console.log(err));\n  } \n\n    dismiss(){\n    this.viewCtl.dismiss(this.typeSoles);\n  }\n\n\n  ajouter(){\n    this.navCtrl.push('AjouterTypeSolePage');\n  }\n\n  detail(typeSole){\n    this.navCtrl.push('DetailTypeSolePage', {'typeSole': typeSole});\n  }\n\n  getItems(ev: any) {\n    // Reset items back to all of the items\n    this.typeSoles = this.allTypeSoles;\n\n    // set val to the value of the searchbar\n    let val = ev.target.value;\n\n    // if the value is an empty string don't filter the items\n    if (val && val.trim() != '') {\n      this.typeSoles = this.typeSoles.filter((item) => {\n        return (item.data.nom.toLowerCase().indexOf(val.toLowerCase()) > -1);\n      });\n    }\n  }\n\n} \n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/type-sole/type-sole.ts"],"sourceRoot":""}